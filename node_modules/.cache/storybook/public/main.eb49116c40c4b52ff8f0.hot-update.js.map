{"version":3,"file":"main.eb49116c40c4b52ff8f0.hot-update.js","sources":["webpack:///./src/Tile/README.mdx","webpack:///./src/Tile/Tile.js","webpack:///./src/Tile/Tile.stories.js"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Meta, Story, Canvas } from '@storybook/addon-docs';\nimport { Tile } from './Tile';\nexport const Template = args => <Tile {...args} mdxType=\"Tile\" />;\n\nconst layoutProps = {\n  Template\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Meta title=\"Components/Tile\" component={Tile} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"tile\"\n    }}>{`Tile`}</h1>\n    <p>{`With `}<inlineCode parentName=\"p\">{`MDX`}</inlineCode>{`, we can define a story for `}<inlineCode parentName=\"p\">{`Tile`}</inlineCode>{` right in the middle of our\nMarkdown documentation.`}</p>\n\n    <Canvas mdxType=\"Canvas\">\n  <Story name=\"Unchecked\" args={{\n        label: 'Unchecked'\n      }} mdxType=\"Story\">\n  {Template.bind({})}\n  </Story>\n  <Story name=\"Checked\" args={{\n        label: 'Unchecked',\n        checked: true\n      }} mdxType=\"Story\">\n  {Template.bind({})}\n  </Story>\n  <Story name=\"Secondary\" args={{\n        label: 'Secondary',\n        checked: true,\n        appearance: 'secondary'\n      }} mdxType=\"Story\">\n  {Template.bind({})}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Primary UI component for user interaction\n */\nexport default Tile = ({ primary, backgroundColor, size, label, ...props }) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n\nTile.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined,\n};\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\n\\nimport { Tile } from './Tile';\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: 'Example/Tile',\\n  component: Tile,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n};\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template = (args) => <Tile {...args} />;\\n\\nexport const Primary = Template.bind({});\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\nPrimary.args = {\\n  primary: true,\\n  label: 'Button',\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  label: 'Button',\\n};\\n\\nexport const Large = Template.bind({});\\nLarge.args = {\\n  size: 'large',\\n  label: 'Button',\\n};\\n\\nexport const Small = Template.bind({});\\nSmall.args = {\\n  size: 'small',\\n  label: 'Button',\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":16},\"endLoc\":{\"col\":45,\"line\":16},\"startBody\":{\"col\":17,\"line\":16},\"endBody\":{\"col\":45,\"line\":16}},\"Secondary\":{\"startLoc\":{\"col\":17,\"line\":16},\"endLoc\":{\"col\":45,\"line\":16},\"startBody\":{\"col\":17,\"line\":16},\"endBody\":{\"col\":45,\"line\":16}},\"Large\":{\"startLoc\":{\"col\":17,\"line\":16},\"endLoc\":{\"col\":45,\"line\":16},\"startBody\":{\"col\":17,\"line\":16},\"endBody\":{\"col\":45,\"line\":16}},\"Small\":{\"startLoc\":{\"col\":17,\"line\":16},\"endLoc\":{\"col\":45,\"line\":16},\"startBody\":{\"col\":17,\"line\":16},\"endBody\":{\"col\":45,\"line\":16}}};\n    \nimport React from 'react';\n\nimport { Tile } from './Tile';\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: 'Example/Tile',\n  component: Tile,\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n};\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template = (args) => <Tile {...args} />;\n\nexport const Primary = Template.bind({});;\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n  label: 'Button',\n};\n\nexport const Large = Template.bind({});;\nLarge.args = {\n  size: 'large',\n  label: 'Button',\n};\n\nexport const Small = Template.bind({});\nSmall.args = {\n  size: 'small',\n  label: 'Button',\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Tile {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <Tile {...args} />\" }, ...Secondary.parameters };\nLarge.parameters = { storySource: { source: \"(args) => <Tile {...args} />\" }, ...Large.parameters };\nSmall.parameters = { storySource: { source: \"(args) => <Tile {...args} />\" }, ...Small.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AADA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAKA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAMA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAJA;AASA;AAnCA;AAqCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AAEA;AACA;AACA;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AApBA;AAuBA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAJA;AACA;AASA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AADA;AAIA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}